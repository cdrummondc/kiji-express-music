<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kiji.express</groupId>
  <artifactId>kiji-express-music</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <inceptionYear>2013</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <avro.version>1.7.2</avro.version>
    <express.version>0.1.0-SNAPSHOT</express.version>
    <scala.version>2.9.2</scala.version>
    <scalatest.version>2.0.M5b</scalatest.version>
  </properties>

  <dependencies>
    <!-- KijiExpress -->
    <dependency>
      <groupId>org.kiji.express</groupId>
      <artifactId>kiji-express</artifactId>
      <version>${express.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--  Testing-->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version}</artifactId>
      <version>${scalatest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kiji.express</groupId>
      <artifactId>kiji-express</artifactId>
      <version>${express.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- Compile for Java 1.6, with warnings enabled. -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <!-- Maven doesn't let me specify more than one command line
               flag with the same name, so I've used both styles of
               specifying compiler args to get all warnings except
               serialVersionUID. -->
          <compilerArguments> <Xlint /> </compilerArguments>
          <compilerArgument>-Xlint:-serial</compilerArgument>
          <testCompilerArguments> <Xlint /> </testCompilerArguments>
          <testCompilerArgument>-Xlint:-serial</testCompilerArgument>
          <!-- End of maven compiler args hack -->
          <encoding>UTF-8</encoding>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <source>1.6</source>
          <target>1.6</target>
          <excludes>
            <exclude>**/*.scala</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <archive>
            <manifest>
              <!-- add project version info, etc. to jar. -->
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${avro.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
              <goal>idl-protocol</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.3</version>
        <executions>
          <execution>
            <id>compilation</id>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <sendJavaToScalac>false</sendJavaToScalac>
            </configuration>
          </execution>
          <execution>
            <id>scaladocs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>doc</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/apidocs</outputDirectory>
              <reportOutputDirectory>${project.build.directory}/apidocs</reportOutputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.scalastyle</groupId>
        <artifactId>scalastyle-maven-plugin</artifactId>
        <version>0.2.0</version>
        <configuration>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <failOnWarning>false</failOnWarning>
          <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
          <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
          <configLocation>${basedir}/src/main/scalastyle/scalastyle_config.xml</configLocation>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- ScalaTest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0-M2</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <descriptors>
            <descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
          </descriptors>
          <tarLongFileMode>gnu</tarLongFileMode>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <!-- Kiji repositories -->
    <repository>
      <id>kiji-repos</id>
      <name>kiji-repos</name>
      <url>https://repo.wibidata.com/artifactory/kiji</url>
    </repository>
    <repository>
      <id>kiji-nightly</id>
      <name>kiji-nightly</name>
      <url>https://repo.wibidata.com/artifactory/kiji-nightly</url>
    </repository>

    <!-- ScalaTest -->
    <repository>
      <id>Sonatype OSS Repository</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
    </repository>

    <!-- Cascading -->
    <repository>
      <id>conjars.org</id>
      <url>http://conjars.org/repo</url>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:git@github.com:kijiproject/kiji-express-music.git</connection>
    <url>scm:git:git@github.com:kijiproject/kiji-express-music.git</url>
    <developerConnection>scm:git:git@github.com:kijiproject/kiji-express-music.git</developerConnection>
  </scm>
</project>
